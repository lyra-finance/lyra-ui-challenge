/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get single instrument by asset name
 */
export type PublicGetInstrument = PublicGetInstrumentJSONRPCSchema
export type Method = 'public/get_instrument'
/**
 * Instrument name
 */
export type InstrumentName = string
/**
 * Minimum valid increment of order amount
 */
export type AmountStep = string
/**
 * Blockchain address of the base asset
 */
export type BaseAssetAddress = string
/**
 * Sub ID of the specific base asset as defined in Asset.sol
 */
export type BaseAssetSubId = string
/**
 * Underlying currency of base asset (`ETH`, `BTC`, etc)
 */
export type BaseCurrency = string
/**
 * Instrument name
 */
export type InstrumentName1 = string
/**
 * `erc20`, `option`, or `perp`
 */
export type InstrumentType = 'erc20' | 'option' | 'perp'
/**
 * If `True`: instrument is tradeable within `activation` and `deactivation` timestamps
 */
export type IsActive = boolean
/**
 * Percent of spot price fee rate for makers
 */
export type MakerFeeRate = string
/**
 * Percent of option price fee cap, e.g. 12.5%, null if not applicable
 */
export type MarkPriceFeeRateCap = string | null
/**
 * Maximum price at which an agressive buyer can be matched. Any portion of a market order that would execute above this price will be cancelled. A limit buy order with limit price above this value is treated as post only (i.e. it will be rejected if it would cross any existing resting order).
 */
export type MaxPrice = string
/**
 * Maximum valid amount of contracts / tokens per trade
 */
export type MaximumAmount = string
/**
 * Minimum price at which an agressive seller can be matched. Any portion of a market order that would execute below this price will be cancelled. A limit sell order with limit price below this value is treated as post only (i.e. it will be rejected if it would cross any existing resting order).
 */
export type MinPrice = string
/**
 * Minimum valid amount of contracts / tokens per trade
 */
export type MinimumAmount = string
/**
 * Unix timestamp of expiry date (in seconds)
 */
export type Expiry = number
/**
 * Underlying settlement price index
 */
export type Index = string
export type OptionType = 'C' | 'P'
/**
 * Settlement price of the option
 */
export type SettlementPrice = string | null
export type Strike = string
/**
 * Latest aggregated funding as per `PerpAsset.sol`
 */
export type AggregateFunding = string
/**
 * Current hourly funding rate as per `PerpAsset.sol`
 */
export type FundingRate = string
/**
 * Underlying spot price index for funding rate
 */
export type Index1 = string
export type MaxRatePerHour = string
export type MinRatePerHour = string
export type StaticInterestRate = string
/**
 * Quote currency (`USD` for perps, `USDC` for options)
 */
export type QuoteCurrency = string
/**
 * Timestamp at which became or will become active (if applicable)
 */
export type ScheduledActivation = number
/**
 * Scheduled deactivation time for instrument (if applicable)
 */
export type ScheduledDeactivation = number
/**
 * Percent of spot price fee rate for takers
 */
export type TakerFeeRate = string
/**
 * Tick size of the instrument, i.e. minimum price increment
 */
export type TickSize = string

export interface PublicGetInstrumentJSONRPCSchema {
  request: PublicGetInstrumentRequestSchema
  response: PublicGetInstrumentResponseSchema
}
export interface PublicGetInstrumentRequestSchema {
  id?: string | number
  method: Method
  params: PublicGetInstrumentParamsSchema
}
export interface PublicGetInstrumentParamsSchema {
  instrument_name: InstrumentName
}
export interface PublicGetInstrumentResponseSchema {
  id: string | number
  result: PublicGetInstrumentResultSchema
}
export interface PublicGetInstrumentResultSchema {
  amount_step: AmountStep
  base_asset_address: BaseAssetAddress
  base_asset_sub_id: BaseAssetSubId
  base_currency: BaseCurrency
  instrument_name: InstrumentName1
  instrument_type: InstrumentType
  is_active: IsActive
  maker_fee_rate: MakerFeeRate
  mark_price_fee_rate_cap?: MarkPriceFeeRateCap
  max_price: MaxPrice
  maximum_amount: MaximumAmount
  min_price: MinPrice
  minimum_amount: MinimumAmount
  option_details: OptionPublicDetailsSchema
  perp_details: PerpPublicDetailsSchema
  quote_currency: QuoteCurrency
  scheduled_activation: ScheduledActivation
  scheduled_deactivation: ScheduledDeactivation
  taker_fee_rate: TakerFeeRate
  tick_size: TickSize
}
/**
 * Details of the option asset (if applicable)
 */
export interface OptionPublicDetailsSchema {
  expiry: Expiry
  index: Index
  option_type: OptionType
  settlement_price?: SettlementPrice
  strike: Strike
}
/**
 * Details of the perp asset (if applicable)
 */
export interface PerpPublicDetailsSchema {
  aggregate_funding?: AggregateFunding
  funding_rate?: FundingRate
  index: Index1
  max_rate_per_hour: MaxRatePerHour
  min_rate_per_hour: MinRatePerHour
  static_interest_rate: StaticInterestRate
}
